{"version":3,"sources":["charts/ChartPie.js","charts/ChartScatter.js","Alert.js","CitySearch.js","Event.js","EventList.js","NumberOfEvents.js","_support_/mock-data.js","_support_/api.js","_support_/citymeet-512.png","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["ChartPie","events","useState","data","setData","useEffect","getData","map","genre","value","filter","event","summary","indexOf","length","name","COLORS","height","width","cx","cy","labelLine","label","percent","toFixed","outerRadius","fill","dataKey","entry","index","align","verticalAlign","layout","ChartScatter","margin","top","right","bottom","left","type","allowDecimals","cursor","strokeDasharray","Alert","props","getStyle","color","fontStyle","className","style","this","text","Component","InfoAlert","OfflineAlert","ErrorAlert","CitySearch","state","query","suggestions","showSuggestions","infoText","handleInputChanged","target","locations","location","toUpperCase","setState","handleItemClicked","suggestion","updateEvents","onChange","onFocus","display","onClick","Event","showDetails","handleToggleDetails","prevState","Card","moment","start","dateTime","format","timeZone","description","EventList","offlineText","status","navigator","onLine","console","log","id","NumberOfEvents","eventCount","errorText","handleNumberChanged","updateEventCount","mockData","kind","etag","htmlLink","created","updated","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","href","startsWith","done","eventsString","localStorage","getItem","eventsParsed","JSON","parse","getAccessToken","token","removeQuery","url","axios","get","setItem","stringify","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","showEventCount","userFilter","filteredEvents","slice","number","city","split","shift","mounted","err","src","citymeet","alt","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","atatus","install"],"mappings":"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","file":"static/js/main.2c19ade0.chunk.js","sourcesContent":["// src/charts/ChartPie.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nfunction ChartPie({ events }) {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setData(() => getData(events));\r\n  }, [events]);\r\n\r\n  const getData = (events) => {     // Note: My method, not CF\r\n    const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'Angular'];\r\n    const data = genres.map((genre) => {\r\n      const value = events.filter((event) => event.summary.indexOf(genre) !== -1).length;\r\n      return { name: genre, value }\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const COLORS = ['#cfe0ff', '#8aace6', '#5885d1', '#2457ad', '#002e7d'];\r\n  return (\r\n    <ResponsiveContainer height={300}>\r\n      <PieChart width={300} height={300}>\r\n        <Pie\r\n          data={data}\r\n          cx='50%'\r\n          cy={160}\r\n          labelLine={false}\r\n          label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n        >\r\n          {\r\n            data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} name={entry.name} />)\r\n          }\r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend align=\"center\" verticalAlign=\"top\" layout=\"horizontal\" height={20} />\r\n      </PieChart>\r\n    </ResponsiveContainer >\r\n  );\r\n}\r\n\r\nexport default ChartPie;","// src/charts/ChartScatter.js\r\n\r\nimport React from 'react';\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\n// function component called with props from App.js\r\n\r\nfunction ChartScatter({ getData }) {\r\n\r\n  return (\r\n    <div>\r\n      <ResponsiveContainer height={400}>\r\n        <ScatterChart\r\n          margin={{\r\n            top: 30, right: 10, bottom: 15, left: 10,\r\n          }}\r\n        >\r\n          <CartesianGrid />\r\n          <XAxis\r\n            type=\"category\"\r\n            dataKey=\"city\"\r\n            name=\"city\" />\r\n          <YAxis\r\n            type=\"number\"\r\n            dataKey=\"number\"\r\n            name=\"number of events\"\r\n            allowDecimals={false} />\r\n          <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n          <Scatter\r\n            name=\"Events by Location\"\r\n            data={getData()}\r\n            fill=\"#8884d8\" />\r\n        </ScatterChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartScatter;","// src/Alert.js\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      fontStyle: 'italic',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n}\r\n\r\nclass OfflineAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'green';\r\n  }\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      fontStyle: 'italic',\r\n    };\r\n  }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'orange';\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n}\r\n\r\nexport { InfoAlert, OfflineAlert, WarningAlert, ErrorAlert };\r\n","// src/CitySearch.js\r\n\r\nimport React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: false,\r\n    infoText: ''\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        infoText: 'No matches. Please try another',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false,\r\n      infoText: ''\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <InfoAlert className=\"infoAlert\" text={this.state.infoText} />\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n        />\r\n        <ul\r\n          className=\"suggestions\"\r\n          style={\r\n            this.state.showSuggestions\r\n              ? {}\r\n              : { display: 'none' }\r\n          }>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >{suggestion}</li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CitySearch;","// src/Event.js\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Card } from 'react-bootstrap';\r\nimport moment from 'moment'\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    showDetails: false\r\n  }\r\n\r\n  handleToggleDetails = () => {\r\n    this.setState(prevState => ({\r\n      showDetails: !prevState.showDetails\r\n    }))\r\n  };\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n    if (!this.state.showDetails) {\r\n      return <Card className='event'>\r\n        <div className='eventSummary'>{event.summary}</div>\r\n        <div\r\n          className='eventStart'>{moment(event.start.dateTime).format(\"D MMM YYYY, h:mm a\")}\r\n        </div>\r\n        <div className='eventTimezone'>{event.start.timeZone}</div>\r\n        <div className='eventLocation'>{event.location}</div>\r\n        <b\r\n          className='details-btn'\r\n          onClick={() => this.handleToggleDetails()}>\r\n          Details\r\n        </b>\r\n      </Card>\r\n    }\r\n    return <Card className='event'>\r\n      <div className='eventSummary'>{event.summary}</div>\r\n      <div\r\n        className='eventStart'>{moment(event.start.dateTime).format(\"D MMM YYYY, h:mm a\")}\r\n      </div>\r\n      <div className='eventTimezone'>{event.start.timeZone}</div>\r\n      <div className='eventLocation'>{event.location}</div>\r\n      <div><hr></hr></div>\r\n      <div className='eventDetails'>{event.description}</div>\r\n      <b\r\n        className='details-btn'\r\n        onClick={() => this.handleToggleDetails()}>\r\n        Hide Details\r\n      </b>\r\n    </Card>;\r\n  }\r\n};\r\n\r\n\r\nexport default Event;","// src/EventList.js\r\n\r\nimport React, { Component } from 'react';\r\nimport Event from './Event';\r\nimport { OfflineAlert } from './Alert';\r\n\r\nclass EventList extends Component {\r\n\r\n  state = {\r\n    offlineText: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    var status = navigator.onLine ? 'online' : 'offline';\r\n    console.log(status);\r\n    if (status === 'offline') {\r\n      this.setState({\r\n        offlineText: 'Working offline. Events not updated.',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        offlineText: '',\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { events } = this.props;\r\n    // console.log(events);\r\n    return (<div className=\"Eventlist\">\r\n      <OfflineAlert text={this.state.offlineText} />\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <div key={event.id}>\r\n            <Event event={event} />\r\n          </div>\r\n        )}\r\n      </ul>\r\n    </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default EventList;","// src/NumberOfEvents.js\r\n\r\nimport React, { Component } from \"react\";\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  // use default 32\r\n  state = {\r\n    eventCount: 32,\r\n    errorText: ''\r\n  }\r\n\r\n  handleNumberChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ eventCount: value });\r\n    if (value <= 0 || value > 32 || value === '') {\r\n      this.setState({\r\n        eventCount: value,\r\n        errorText: 'Please choose between 1 and 32'\r\n      });\r\n\r\n      // if user has input value, call updateEventCount() in App.js\r\n    } else {\r\n      this.props.updateEventCount(value);\r\n      this.setState({\r\n        eventCount: value,\r\n        errorText: ''\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"NumberOfEvents\">\r\n      <ErrorAlert className=\"errorAlert\" text={this.state.errorText} />\r\n      <input\r\n        type=\"number\"\r\n        className=\"viewNumber\"\r\n        value={this.state.eventCount}\r\n        onChange={this.handleNumberChanged}\r\n      />\r\n    </div>;\r\n  }\r\n}\r\nexport default NumberOfEvents;\r\n","// src/_support_/mock-data\r\n\r\nconst mockData = [\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181161784712000\"',\r\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\r\n    status: 'confirmed',\r\n    htmlLink: 'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:17:46.000Z',\r\n    updated: '2020-05-27T12:01:32.356Z',\r\n    summary: 'Learn JavaScript',\r\n    description: 'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\r\n    location: 'London, UK',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin'\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-19T17:00:00+02:00',\r\n      timeZone: 'Europe/Berlin'\r\n    },\r\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin'\r\n    },\r\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true\r\n    }\r\n  },\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181159875584000\"',\r\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\r\n    status: 'confirmed',\r\n    htmlLink: 'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:14:30.000Z',\r\n    updated: '2020-05-27T11:45:37.792Z',\r\n    summary: 'React is Fun',\r\n    description: 'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\r\n    location: 'Berlin, Germany',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin'\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-20T15:00:00+02:00',\r\n      timeZone: 'Europe/Berlin'\r\n    },\r\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin'\r\n    },\r\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true\r\n    }\r\n  }\r\n];\r\n\r\nexport { mockData };","// src/_support_/api.js\r\n\r\nimport { mockData } from './mock-data'\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;  // An array of locations\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  if (!navigator.onLine) {\r\n    const eventsString = localStorage.getItem(\"lastEvents\");\r\n    const eventsParsed = JSON.parse(eventsString);\r\n    NProgress.done();\r\n    return eventsParsed.events;\r\n  };\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = `https://9a81gfiskk.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://9a81gfiskk.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://9a81gfiskk.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n\r\n    return code && getToken(code);\r\n  }\r\n\r\n  return accessToken;\r\n}","export default __webpack_public_path__ + \"static/media/citymeet-512.3b550c9d.png\";","// src/App.js\r\n\r\nimport React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport './App.css';\r\nimport ChartPie from './charts/ChartPie';\r\nimport ChartScatter from './charts/ChartScatter';\r\nimport CitySearch from './CitySearch';\r\nimport EventList from './EventList';\r\nimport \"./nprogress.css\";\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { extractLocations, getEvents } from './_support_/api';\r\nimport citymeet from './_support_/citymeet-512.png';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    showEventCount: 32,\r\n    userFilter: [],\r\n  }\r\n\r\n  updateEvents = (location) => {\r\n    getEvents().then((events) => {\r\n      const showEventCount = this.state.showEventCount;\r\n\r\n      const locationEvents = (location === 'all')\r\n        ? events\r\n        : events.filter((event) => event.location === location);\r\n\r\n      const filteredEvents = locationEvents.slice(0, showEventCount)\r\n\r\n      this.setState({\r\n        // new array matching locations and showEventCount filter.\r\n        events: filteredEvents\r\n      });\r\n    });\r\n  }\r\n\r\n  updateEventCount = (number) => {\r\n    this.setState({\r\n      showEventCount: number\r\n    });\r\n  };\r\n\r\n  getData = () => {\r\n    const { locations, events } = this.state;\r\n    const data = locations.map((location) => {\r\n      const number = events.filter((event) => event.location === location).length\r\n      const city = location.split(',').shift()\r\n      return { city, number };\r\n    })\r\n    return data;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        this.setState({ events, locations: extractLocations(events) });\r\n      }\r\n    })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          <img id=\"citymeet_logo\" src={citymeet} alt=\"CityMeet app logo\" />\r\n          <h1>CityMeet Calendar</h1>\r\n        </div>\r\n\r\n        <h4>Choose your nearest city</h4>\r\n        <Container>\r\n          <CitySearch\r\n            locations={this.state.locations}\r\n            updateEvents={this.updateEvents} />\r\n          <NumberOfEvents\r\n            updateEventCount={this.updateEventCount}\r\n          />\r\n          <div className=\"div-vis-wrapper\">\r\n            <ChartPie\r\n              events={this.state.events} />\r\n            <ChartScatter\r\n              getData={this.getData} />\r\n          </div>\r\n          <EventList\r\n            events={this.state.events}\r\n            showEventCount={this.state.showEventCount}\r\n          />\r\n        </Container>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport * as atatus from 'atatus-spa';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\natatus.config('0ee536fcb8ee42fabaa91c6c5f1f0110').install();\r\n"],"sourceRoot":""}